name: scp files
on: [push]
jobs:
  ## 1. 빌드
  build:
    runs-on: ubuntu-latest
    ## 형상 다운로드
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
    ## 빌드
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew clean build
    ## 빌드 아티팩트 확인
     - name: check artifact file
       run: ls -ahl ./build/libs/*.jar
    ## 빌드 아티팩트 업로드
    - name: upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: project_artifact
        path: "./build/libs/*.jar"
  ## 2. 배포
  distribute:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      ## 아티팩트 전송을 위한 임시 디렉토리
      - name: create temporary directory
        run: mkdir ~/distribute
      ## 빌드한 아티팩트 다운로드
      - name: download build artifact
        uses: actions/download-artifact@v3
        with:
          name: project_artifact
          path: distribute
      ## 아티팩트 확인
      - name: check artifact downloaded
        run: |
          ls -alh distribute
      ## 서버에 아티팩트 전송
      - name: transfer artifact via ssh password
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          rm: true
          source: "distribute/*.jar"
          target: ${{ secrets.DIR_PATH }}
          ## 작업에 사용한 distrubute 디렉토리를 경로에서 제거
          strip_components: 1
      ## 전송된 아티팩트 확인
      - name: Show structure of transfer files
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          password: ${{ secrets.PASSWORD }}
          script: |
            cd ${{ secrets.DIR_PATH }}
            ls -alh